% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/operations.R
\docType{data}
\name{ForwardBackwardFunctions}
\alias{ForwardBackwardFunctions}
\alias{env_fwd}
\alias{env_bwd}
\title{Forward and backward functions for operations}
\format{
\code{env_fwd} is an environment containing the forward functions of each operator.

\code{env_bwd} is an environment containing the backward functions of each operator.
}
\usage{
names(env_fwd)

env_fwd$operatorname

names(env_bwd)

env_bwd$operatorname
}
\description{
Environments which hold forward and backward functions for each operation.
Operations should have the same name in both environments. The backward version
of the operation should have one additional argument \code{prev} which is the
partial derivative from the previous step in the backward propagation.
For binary operators, the backward function should output a list with
two entries representing the derivatives with respect to each argument.
See \link{Operators} for list of built-in operators.
}
\examples{
# Here's an example of how this package defines the
# forward and backward functions for matrix multiplication.
env_fwd$`\%*\%` = base::`\%*\%`
env_bwd$`\%*\%` = function(L,R,prev) {
  return(list(
    L=base::tcrossprod(prev,R),
    R=base::crossprod(L,prev)
  ))
}
env_fwd$crossprod = base::crossprod
env_bwd$crossprod = function(L,R,prev) {
  return(list(
    L=base::tcrossprod(R,prev),
    R=base::`\%*\%`(L,prev)
  ))
}
env_fwd$tcrossprod = base::tcrossprod
env_bwd$tcrossprod = function(L,R,prev) {
  return(list(
    L=base::`\%*\%`(prev,R),
    R=base::crossprod(prev,L)
  ))
}

# And here's an example with a unary operator (softmax)
env_fwd$softmax = function(X) {
  ones = matrix(1,nrow=ncol(X),ncol=ncol(X))
  return(exp(X) / (exp(X) \%*\% ones))
}
env_bwd$softmax = function(X, prev) {
  ones = matrix(1,nrow=ncol(X),ncol=ncol(X))
  top = exp(X); bottom = exp(X) \%*\% ones
  tmp1 = prev*(top/bottom)
  tmp2 = prev*top*(-(1/bottom/bottom))
  tmp2 = tmp2 \%*\% ones
  tmp2 = tmp2*top
  return(tmp1 + tmp2)
}

}
\keyword{datasets}
